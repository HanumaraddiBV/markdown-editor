{"ast":null,"code":"var _jsxFileName = \"/home/hanumaraddi/MarkdownEditor/CLIENT/src/pages/MarkdownEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./style.css\";\nimport Prism from \"prismjs\";\nimport \"prismjs/themes/prism.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarkdownEditor = () => {\n  _s();\n  const [markdown, setMarkdown] = useState(\"\");\n  const [htmlPreview, setHtmlPreview] = useState(\"\");\n  const handleMarkdownChange = e => {\n    setMarkdown(e.target.value);\n  };\n\n  // Send markdown text to backend for conversion\n  useEffect(() => {\n    fetchHTML();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [markdown]);\n  useEffect(() => {\n    Prism.highlightAll(); // for Syntax highlighting\n  }, [htmlPreview]);\n\n  //fetching HTML from server\n  const fetchHTML = async () => {\n    if (markdown) {\n      try {\n        const response = await axios.post(\"http://localhost:3000/convert\", {\n          markdown\n        });\n        setHtmlPreview(response.data.html); // set html preview\n      } catch (error) {\n        console.error(\"Error converting markdown:\", error);\n      }\n    } else {\n      setHtmlPreview(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-pane\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Markdown Editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: handleMarkdownChange,\n        value: markdown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"preview-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Live Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-pane\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: htmlPreview\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(MarkdownEditor, \"CF1rRkWHk3LFKZ+BwMlbbPOoYa0=\");\n_c = MarkdownEditor;\nexport default MarkdownEditor;\nvar _c;\n$RefreshReg$(_c, \"MarkdownEditor\");","map":{"version":3,"names":["React","useEffect","useState","axios","Prism","jsxDEV","_jsxDEV","MarkdownEditor","_s","markdown","setMarkdown","htmlPreview","setHtmlPreview","handleMarkdownChange","e","target","value","fetchHTML","highlightAll","response","post","data","html","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","class","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/home/hanumaraddi/MarkdownEditor/CLIENT/src/pages/MarkdownEditor.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./style.css\";\nimport Prism from \"prismjs\";\nimport \"prismjs/themes/prism.css\";\nconst MarkdownEditor = () => {\n  const [markdown, setMarkdown] = useState(\"\");\n  const [htmlPreview, setHtmlPreview] = useState(\"\");\n\n  const handleMarkdownChange = (e) => {\n    setMarkdown(e.target.value);\n  };\n\n  // Send markdown text to backend for conversion\n  useEffect(() => {\n    fetchHTML();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [markdown]);\n\n  useEffect(() => {\n    Prism.highlightAll(); // for Syntax highlighting\n  }, [htmlPreview]);\n\n  //fetching HTML from server\n  const fetchHTML = async () => {\n    if (markdown) {\n      try {\n        const response = await axios.post(\"http://localhost:3000/convert\", {\n          markdown,\n        });\n        setHtmlPreview(response.data.html); // set html preview\n      } catch (error) {\n        console.error(\"Error converting markdown:\", error);\n      }\n    } else {\n      setHtmlPreview(\"\");\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"editor-pane\">\n        <h2>Markdown Editor</h2>\n        <textarea onChange={handleMarkdownChange} value={markdown}></textarea>\n      </div>\n      <div class=\"preview-section\">\n        <h2>Live Preview</h2>\n        <div className=\"preview-pane\">\n          <div dangerouslySetInnerHTML={{ __html: htmlPreview }} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MarkdownEditor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMW,oBAAoB,GAAIC,CAAC,IAAK;IAClCJ,WAAW,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACdgB,SAAS,CAAC,CAAC;IACX;EACF,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEdR,SAAS,CAAC,MAAM;IACdG,KAAK,CAACc,YAAY,CAAC,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,CAACP,WAAW,CAAC,CAAC;;EAEjB;EACA,MAAMM,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAIR,QAAQ,EAAE;MACZ,IAAI;QACF,MAAMU,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,+BAA+B,EAAE;UACjEX;QACF,CAAC,CAAC;QACFG,cAAc,CAACO,QAAQ,CAACE,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC,MAAM;MACLX,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBpB,OAAA;MAAKmB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BpB,OAAA;QAAAoB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBxB,OAAA;QAAUyB,QAAQ,EAAElB,oBAAqB;QAACG,KAAK,EAAEP;MAAS;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC,eACNxB,OAAA;MAAK0B,KAAK,EAAC,iBAAiB;MAAAN,QAAA,gBAC1BpB,OAAA;QAAAoB,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBxB,OAAA;QAAKmB,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3BpB,OAAA;UAAK2B,uBAAuB,EAAE;YAAEC,MAAM,EAAEvB;UAAY;QAAE;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CAhDID,cAAc;AAAA4B,EAAA,GAAd5B,cAAc;AAkDpB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}